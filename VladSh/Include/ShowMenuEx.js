///Script "library" for working with users menu (menu autogenerated from parameter files)
// must be placed in ...\Scripts\Include\
// http://akelpad.sourceforge.net/forum/viewtopic.php?p=8153#8153
// Version: 4.0 (2012.09.10)
//
/// Getting the value selected in the user menu (getSelectedMenuItem function)
//
// Menu automatically generated from the parameter files.
// Settings are located in files <current script name>. Param in the directory "[AkelPad]\AkelFiles\Plugs\Scripts\Params"
//
/// Получение значения, выбранного в пользовательском меню (функция getSelectedMenuItem)
//
// Меню автоматически формируются из соответствующего скрипту файла параметров.
// Параметры размещается в файлах <имя запускаемого скрипта>.param в дирректории "[AkelPad]\AkelFiles\Plugs\Scripts\Params"
//
// Имена параметров, передаваемых в аргументах вызывающих скриптов:
// 	-paramFile - имя файла параметров; если не передано, то будет отпределено по имени запускаиваемого скрипта
// 	-place - значение для pPOS_PLACE (см. ниже) либо идентификатор кнопки тулбара, передавать который в виде -place="%m %i"
// 	-ignore1menu (0/1) - если в файле параметров одна строка и bIgnoreMenu = 1, тогда меню выводиться не будет


var hWndMain = AkelPad.GetMainWnd();
if (hWndMain) {
	//Подключение общего скрипта-"библиотеки" вывода меню
	if (! AkelPad.Include("ShowMenu.js")) WScript.Quit();
	
	//позиция идентификатора меню в структуре
	var poslpItemsId = 2;
	
	//Variables for used files
	var pMenuFile = "";
	
	var pScriptName = WScript.ScriptName;
	var paramExt = ".param";
	
	//имя *.param-файла
	var pMenuFile = AkelPad.GetArgValue("paramFile", "");
	if (!pMenuFile)
			pMenuFile = pScriptName.substring(0, pScriptName.indexOf(".")) + paramExt;		//Имя файла параметров берём по запускаемому скрипту
		pMenuFile = AkelPad.GetAkelDir(5) + "\\Params\\" + pMenuFile;
	
	var bIgnoreMenu = AkelPad.GetArgValue("ignore1menu", 0);
}


//Functions

function getSelectedMenuItem(pPOS_PLACE, pParsepProcType, bReturnStructure)
//pPOS_PLACE - возможность задавать позицию вывода меню; варианты см. в ShowMenuCommon.js var POS_ ...
//pParsepProcType	- каким образом будет распознаваться файл параметров:
//										0 - одно значение - одна строка; является надписью, выводимой в меню, применяется для простых случаев
//										INI - вариант записи параметров в виде: идентификатор = надпись, выводимая в меню
//										... - собственный парсер (необходимо будет добавить в var Parser)
//bReturnStructure		- в каком виде будет возвращаться результат:
//										false (0) - в виде текста (возврат надписи выбранного пункта меню)
//										true (1) - в виде структуры [текст пункта меню, MF_NORMAL, идентификатор] (для сложных случаев)
//		если пользователь может использовать любой вариант меню, то лучше передавать 1, а потом универсально анализировать результат pMenuItem[0]
//Примеры вызовов:
//						var pMenuLable = getSelectedMenuItem(POS_CARET, "0", 0);		- простой аналог ListBox'а
//						var pMenuItem = getSelectedMenuItem(POS_CARET, "INI", 1);		- аналог ListBox'а с псевдонимом (идентификатором)
//						var pMenuItem = getSelectedMenuItem(POS_CARET, "", 1);			- автоопределение типа парсера по данным в файле параметров; возвращает полную структуру выбранного пункта
{
	if (hWndMain) {
		var fso = new ActiveXObject("Scripting.FileSystemObject");
		if (fso.FileExists(pMenuFile) == true)
		{
			var lpItems = [];
			var nItem;

			var lpContent = AkelPad.ReadFile(pMenuFile);
			lpContent = lpContent.replace(/\r\n/g, "\r");
			lpContent = lpContent.replace(/\r{2,}/g, "\r");
			lpContent = trim(lpContent, "\r\n");
			if (lpContent)
			{
				var nEditItem = 1111;
				var lpArrayName = lpContent.split("\r");
				
				//Определение объекта-парсера
				var Parser =
				{
					proc0: function(lpArrayName, lpItems)
					{
						for (nItem = 0; nItem < lpArrayName.length; ++nItem)
						{
							pItem = lpArrayName[nItem];
							if (pItem)
								lpItems[nItem] = [pItem, MF_NORMAL, pItem];
						}
						return nItem;
					},
					
					procINI: function(lpArrayName, lpItems)
					{
						var oRegExp =
						{
							getPureValue: function(pStr)
							{
								return trim(pStr, " \t");
							}
						};
						
						var pItem;
						var iSep;
						var pValue;
						var pLabel;
						
						for (nItem = 0; nItem < lpArrayName.length; ++nItem)
						{
							pItem = lpArrayName[nItem];
							if (pItem)
							{
								iSep = pItem.lastIndexOf("=");
								if (iSep == -1)
								{
									pItem += "=";
									iSep = pItem.length;
								}
								pID = oRegExp.getPureValue(pItem.substr(0, iSep));
								pLabel = oRegExp.getPureValue(pItem.substr(iSep + 1));
								if (!pLabel)
									pLabel = "- надпись для " + pID + " не указана -";
								
								lpItems[nItem] = [pLabel, MF_NORMAL, pID];
							}
						}
						return nItem;
					}
				};
				
				//Автоопределение парсера (если не задан)
				if (!pParsepProcType)
				{
					if (lpArrayName[0].indexOf("=") == -1)
						pParsepProcType = "0";
					else
						pParsepProcType = "INI";
				}
				//формирование меню
				nItem = Parser["proc" + pParsepProcType](lpArrayName, lpItems);
				
				if (!(lpItems.length == 1 && bIgnoreMenu))
				{
					//Добавление возможности изменять настроечные файлы параметров
					lpItems[nItem] = ["", MF_SEPARATOR, ""];
					lpItems[nItem + 1] = ["изменить меню...", MF_NORMAL, nEditItem];
					
					//Вывод меню на экран и получение выбранного Item'а
					if (!isNaN(pPOS_PLACE))		//если не числовое значение, то это константа POS_... из ShowMenu.js
						nItem = ShowMenu(lpItems, pPOS_PLACE, pPOS_PLACE);
					else {		//иначе стартовали из тулбара
						pPOS_PLACE = pPOS_PLACE.split(" ");
						var hToolbarHandle = parseInt(pPOS_PLACE[0]);
						var nToolbarItemID = parseInt(pPOS_PLACE[1]);
						var ptPoint = GetToolbarBottonPos(hToolbarHandle, nToolbarItemID)
						nItem = ShowMenu(lpItems, ptPoint.x, ptPoint.y);
					}
				}
				else
					nItem -= 1;
				
				if (nItem != -1)
				{
					if (lpItems[nItem][poslpItemsId] != nEditItem)
					{
						if (!bReturnStructure)
							return lpItems[nItem][poslpItemsId];					//Возвращаем выбранный пункт меню
						else
							return lpItems[nItem];						//Возвращаем полностью структуру
					}
					else
					{
						AkelPad.OpenFile(pMenuFile);		//Открываем файл параметров для внесения изменений
						WScript.Quit();
					}
				}
				else
					return '';
			}
			else
			{
				if (AkelPad.MessageBox(hWndEdit, "Файл параметров '" + pMenuFile + "' ПУСТ! Открыть его?", pScriptName, 4 /*MB_YESNO*/ + 48 /*MB_ICONEXCLAMATION*/) == 6)
					AkelPad.OpenFile(pMenuFile);
				WScript.Quit();
			}
		}
		else
		{
			if (AkelPad.MessageBox(hWndEdit, "Файл параметров '" + pMenuFile + "' НЕ СУЩЕСТВУЕТ! Создать его?", pScriptName, 4 /*MB_YESNO*/ + 48 /*MB_ICONEXCLAMATION*/) == 6)
			{
				AkelPad.SendMessage(hWndMain, 273 /*WM_COMMAND*/, 4101 /*IDM_FILE_NEW*/, 0);
				hWndEdit = AkelPad.GetEditWnd();
				AkelPad.SaveFile(hWndEdit, pMenuFile);
			}
			WScript.Quit();
		}
	}
}

function trim(pText, chars)
{
	return pText.replace(new RegExp("(^[" + chars + "])|([" + chars + "]+$)", "g"), "");
}